

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Dec 17 15:02:18 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28   000000                     
    29                           ; Generated 18/08/2023 GMT
    30                           ; 
    31                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4520 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   000000                     _RCREG	set	4014
    64   000000                     _TXREG	set	4013
    65   000000                     _PIE1bits	set	3997
    66   000000                     _SPBRG	set	4015
    67   000000                     _BAUDCONbits	set	4024
    68   000000                     _PIR1bits	set	3998
    69   000000                     _CCP1CON	set	4029
    70   000000                     _ADCON0bits	set	4034
    71   000000                     _ADRESL	set	4035
    72   000000                     _ADRESH	set	4036
    73   000000                     _ADCON1	set	4033
    74   000000                     _ADFM	set	32263
    75   000000                     _OSCCONbits	set	4051
    76   000000                     _ADCON2bits	set	4032
    77   000000                     _CREN	set	32092
    78   000000                     _RCIF	set	31989
    79   000000                     _IRCF0	set	32412
    80   000000                     _IRCF1	set	32413
    81   000000                     _TRISA	set	3986
    82   000000                     _INTCONbits	set	4082
    83   000000                     _TRISCbits	set	3988
    84   000000                     _RCONbits	set	4048
    85   000000                     _RCSTAbits	set	4011
    86   000000                     _TXSTAbits	set	4012
    87   000000                     _IPR1bits	set	3999
    88   000000                     _IRCF2	set	32414
    89                           
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93   0006B4                     __pcinit:
    94                           	callstack 0
    95   0006B4                     start_initialization:
    96                           	callstack 0
    97   0006B4                     __initialization:
    98                           	callstack 0
    99                           
   100                           ; Clear objects allocated to COMRAM (42 bytes)
   101   0006B4  EE00  F001         	lfsr	0,__pbssCOMRAM
   102   0006B8  0E2A               	movlw	42
   103   0006BA                     clear_0:
   104   0006BA  6AEE               	clrf	postinc0,c
   105   0006BC  06E8               	decf	wreg,f,c
   106   0006BE  E1FD               	bnz	clear_0
   107   0006C0                     end_of_initialization:
   108                           	callstack 0
   109   0006C0                     __end_of__initialization:
   110                           	callstack 0
   111   0006C0  9036               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   112   0006C2  9236               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   113   0006C4  0100               	movlb	0
   114   0006C6  EF4D  F003         	goto	_main	;jump to C main() function
   115                           
   116                           	psect	bssCOMRAM
   117   000001                     __pbssCOMRAM:
   118                           	callstack 0
   119   000001                     _lenStr:
   120                           	callstack 0
   121   000001                     	ds	2
   122   000003                     _mystring:
   123                           	callstack 0
   124   000003                     	ds	20
   125   000017                     _str:
   126                           	callstack 0
   127   000017                     	ds	20
   128                           
   129                           	psect	cstackCOMRAM
   130   00002B                     __pcstackCOMRAM:
   131                           	callstack 0
   132   00002B                     UART_Write@data:
   133                           	callstack 0
   134                           
   135                           ; 1 bytes @ 0x0
   136   00002B                     	ds	1
   137   00002C                     ??_Lo_ISR:
   138                           
   139                           ; 1 bytes @ 0x1
   140   00002C                     	ds	5
   141   000031                     
   142                           ; 1 bytes @ 0x6
   143   000031                     	ds	2
   144   000033                     strcpy@dest:
   145                           	callstack 0
   146                           
   147                           ; 1 bytes @ 0x8
   148   000033                     	ds	1
   149   000034                     strcpy@src:
   150                           	callstack 0
   151                           
   152                           ; 1 bytes @ 0x9
   153   000034                     	ds	1
   154   000035                     strcpy@d:
   155                           	callstack 0
   156                           
   157                           ; 1 bytes @ 0xA
   158   000035                     	ds	1
   159   000036                     
   160                           ; 1 bytes @ 0xB
   161 ;;
   162 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   163 ;;
   164 ;; *************** function _main *****************
   165 ;; Defined at:
   166 ;;		line 14 in file "main.c"
   167 ;; Parameters:    Size  Location     Type
   168 ;;		None
   169 ;; Auto vars:     Size  Location     Type
   170 ;;		None
   171 ;; Return value:  Size  Location     Type
   172 ;;                  1    wreg      void 
   173 ;; Registers used:
   174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   175 ;; Tracked objects:
   176 ;;		On entry : 0/0
   177 ;;		On exit  : 0/0
   178 ;;		Unchanged: 0/0
   179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   180 ;;      Params:         0       0       0       0       0       0       0
   181 ;;      Locals:         0       0       0       0       0       0       0
   182 ;;      Temps:          0       0       0       0       0       0       0
   183 ;;      Totals:         0       0       0       0       0       0       0
   184 ;;Total ram usage:        0 bytes
   185 ;; Hardware stack levels required when called: 6
   186 ;; This function calls:
   187 ;;		_GetString
   188 ;;		_SYSTEM_Initialize
   189 ;;		_strcpy
   190 ;; This function is called by:
   191 ;;		Startup code after reset
   192 ;; This function uses a non-reentrant model
   193 ;;
   194                           
   195                           	psect	text0
   196   00069A                     __ptext0:
   197                           	callstack 0
   198   00069A                     _main:
   199                           	callstack 25
   200   00069A                     
   201                           ;main.c: 17:     SYSTEM_Initialize() ;
   202   00069A  EC65  F003         	call	_SYSTEM_Initialize	;wreg free
   203   00069E                     l976:
   204                           
   205                           ;main.c: 20:         strcpy(str, GetString());
   206   00069E  0E17               	movlw	low _str
   207   0006A0  6E33               	movwf	strcpy@dest^0,c
   208   0006A2  EC97  F003         	call	_GetString	;wreg free
   209   0006A6  6E34               	movwf	strcpy@src^0,c
   210   0006A8  EC23  F003         	call	_strcpy	;wreg free
   211   0006AC  EF4F  F003         	goto	l976
   212   0006B0  EF36  F000         	goto	start
   213   0006B4                     __end_of_main:
   214                           	callstack 0
   215                           
   216 ;; *************** function _strcpy *****************
   217 ;; Defined at:
   218 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;  dest            1    8[COMRAM] PTR unsigned char 
   221 ;;		 -> str(20), 
   222 ;;  src             1    9[COMRAM] PTR const unsigned char 
   223 ;;		 -> mystring(20), 
   224 ;; Auto vars:     Size  Location     Type
   225 ;;  d               1   10[COMRAM] PTR unsigned char 
   226 ;;		 -> str(20), 
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      PTR unsigned char 
   229 ;; Registers used:
   230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   231 ;; Tracked objects:
   232 ;;		On entry : 0/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   236 ;;      Params:         2       0       0       0       0       0       0
   237 ;;      Locals:         1       0       0       0       0       0       0
   238 ;;      Temps:          0       0       0       0       0       0       0
   239 ;;      Totals:         3       0       0       0       0       0       0
   240 ;;Total ram usage:        3 bytes
   241 ;; Hardware stack levels used: 1
   242 ;; Hardware stack levels required when called: 4
   243 ;; This function calls:
   244 ;;		Nothing
   245 ;; This function is called by:
   246 ;;		_main
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250                           	psect	text1
   251   000646                     __ptext1:
   252                           	callstack 0
   253   000646                     _strcpy:
   254                           	callstack 26
   255   000646  C033  F035         	movff	strcpy@dest,strcpy@d
   256   00064A                     l972:
   257   00064A  2A34               	incf	strcpy@src^0,f,c
   258   00064C  0434               	decf	strcpy@src^0,w,c
   259   00064E  6ED9               	movwf	fsr2l,c
   260   000650  6ADA               	clrf	fsr2h,c
   261   000652  2A35               	incf	strcpy@d^0,f,c
   262   000654  0435               	decf	strcpy@d^0,w,c
   263   000656  6EE1               	movwf	fsr1l,c
   264   000658  6AE2               	clrf	fsr1h,c
   265   00065A  CFDF FFE7          	movff	indf2,indf1
   266   00065E  50E7               	movf	indf1,w,c
   267   000660  A4D8               	btfss	status,2,c
   268   000662  EF35  F003         	goto	u91
   269   000666  EF37  F003         	goto	u90
   270   00066A                     u91:
   271   00066A  EF25  F003         	goto	l972
   272   00066E                     u90:
   273   00066E  0012               	return		;funcret
   274   000670                     __end_of_strcpy:
   275                           	callstack 0
   276                           
   277 ;; *************** function _SYSTEM_Initialize *****************
   278 ;; Defined at:
   279 ;;		line 60 in file "setting_hardaware/setting.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;		None
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg, status,2, cstack
   288 ;; Tracked objects:
   289 ;;		On entry : 0/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   293 ;;      Params:         0       0       0       0       0       0       0
   294 ;;      Locals:         0       0       0       0       0       0       0
   295 ;;      Temps:          0       0       0       0       0       0       0
   296 ;;      Totals:         0       0       0       0       0       0       0
   297 ;;Total ram usage:        0 bytes
   298 ;; Hardware stack levels used: 1
   299 ;; Hardware stack levels required when called: 5
   300 ;; This function calls:
   301 ;;		_ADC_Initialize
   302 ;;		_CCP1_Initialize
   303 ;;		_INTERRUPT_Initialize
   304 ;;		_OSCILLATOR_Initialize
   305 ;;		_UART_Initialize
   306 ;; This function is called by:
   307 ;;		_main
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           	psect	text2
   312   0006CA                     __ptext2:
   313                           	callstack 0
   314   0006CA                     _SYSTEM_Initialize:
   315                           	callstack 25
   316   0006CA                     
   317                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
   318   0006CA  EC8C  F003         	call	_OSCILLATOR_Initialize	;wreg free
   319                           
   320                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
   321   0006CE  EC90  F003         	call	_INTERRUPT_Initialize	;wreg free
   322   0006D2                     
   323                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
   324   0006D2  EC38  F003         	call	_UART_Initialize	;wreg free
   325   0006D6                     
   326                           ;setting_hardaware/setting.c: 69:     CCP1_Initialize();
   327   0006D6  EC86  F003         	call	_CCP1_Initialize	;wreg free
   328   0006DA                     
   329                           ;setting_hardaware/setting.c: 70:     ADC_Initialize();
   330   0006DA  EC70  F003         	call	_ADC_Initialize	;wreg free
   331   0006DE  0012               	return		;funcret
   332   0006E0                     __end_of_SYSTEM_Initialize:
   333                           	callstack 0
   334                           
   335 ;; *************** function _UART_Initialize *****************
   336 ;; Defined at:
   337 ;;		line 7 in file "setting_hardaware/uart.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;		None
   340 ;; Auto vars:     Size  Location     Type
   341 ;;		None
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      void 
   344 ;; Registers used:
   345 ;;		wreg, status,2
   346 ;; Tracked objects:
   347 ;;		On entry : 0/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   351 ;;      Params:         0       0       0       0       0       0       0
   352 ;;      Locals:         0       0       0       0       0       0       0
   353 ;;      Temps:          0       0       0       0       0       0       0
   354 ;;      Totals:         0       0       0       0       0       0       0
   355 ;;Total ram usage:        0 bytes
   356 ;; Hardware stack levels used: 1
   357 ;; Hardware stack levels required when called: 4
   358 ;; This function calls:
   359 ;;		Nothing
   360 ;; This function is called by:
   361 ;;		_SYSTEM_Initialize
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text3
   366   000670                     __ptext3:
   367                           	callstack 0
   368   000670                     _UART_Initialize:
   369                           	callstack 25
   370   000670                     
   371                           ;setting_hardaware/uart.c: 18:     TRISCbits.TRISC6 = 1;
   372   000670  8C94               	bsf	148,6,c	;volatile
   373                           
   374                           ;setting_hardaware/uart.c: 19:     TRISCbits.TRISC7 = 1;
   375   000672  8E94               	bsf	148,7,c	;volatile
   376   000674                     
   377                           ;setting_hardaware/uart.c: 22:     OSCCONbits.IRCF = 110;
   378   000674  50D3               	movf	211,w,c	;volatile
   379   000676  0B8F               	andlw	-113
   380   000678  0960               	iorlw	96
   381   00067A  6ED3               	movwf	211,c	;volatile
   382   00067C                     
   383                           ;setting_hardaware/uart.c: 23:     TXSTAbits.SYNC = 0;
   384   00067C  98AC               	bcf	172,4,c	;volatile
   385   00067E                     
   386                           ;setting_hardaware/uart.c: 24:     BAUDCONbits.BRG16 = 0;
   387   00067E  96B8               	bcf	184,3,c	;volatile
   388   000680                     
   389                           ;setting_hardaware/uart.c: 25:     TXSTAbits.BRGH = 0;
   390   000680  94AC               	bcf	172,2,c	;volatile
   391                           
   392                           ;setting_hardaware/uart.c: 26:     SPBRG = 51;
   393   000682  0E33               	movlw	51
   394   000684  6EAF               	movwf	175,c	;volatile
   395   000686                     
   396                           ;setting_hardaware/uart.c: 29:     RCSTAbits.SPEN = 1;
   397   000686  8EAB               	bsf	171,7,c	;volatile
   398   000688                     
   399                           ;setting_hardaware/uart.c: 30:     PIR1bits.TXIF = 1;
   400   000688  889E               	bsf	158,4,c	;volatile
   401   00068A                     
   402                           ;setting_hardaware/uart.c: 31:     PIR1bits.RCIF = 0;
   403   00068A  9A9E               	bcf	158,5,c	;volatile
   404   00068C                     
   405                           ;setting_hardaware/uart.c: 32:     TXSTAbits.TXEN = 1;
   406   00068C  8AAC               	bsf	172,5,c	;volatile
   407   00068E                     
   408                           ;setting_hardaware/uart.c: 33:     RCSTAbits.CREN = 1;
   409   00068E  88AB               	bsf	171,4,c	;volatile
   410   000690                     
   411                           ;setting_hardaware/uart.c: 34:     PIE1bits.TXIE = 0;
   412   000690  989D               	bcf	157,4,c	;volatile
   413   000692                     
   414                           ;setting_hardaware/uart.c: 35:     IPR1bits.TXIP = 0;
   415   000692  989F               	bcf	159,4,c	;volatile
   416   000694                     
   417                           ;setting_hardaware/uart.c: 36:     PIE1bits.RCIE = 1;
   418   000694  8A9D               	bsf	157,5,c	;volatile
   419   000696                     
   420                           ;setting_hardaware/uart.c: 37:     IPR1bits.RCIP = 0;
   421   000696  9A9F               	bcf	159,5,c	;volatile
   422   000698  0012               	return		;funcret
   423   00069A                     __end_of_UART_Initialize:
   424                           	callstack 0
   425                           
   426 ;; *************** function _OSCILLATOR_Initialize *****************
   427 ;; Defined at:
   428 ;;		line 73 in file "setting_hardaware/setting.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;		None
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		None
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   442 ;;      Params:         0       0       0       0       0       0       0
   443 ;;      Locals:         0       0       0       0       0       0       0
   444 ;;      Temps:          0       0       0       0       0       0       0
   445 ;;      Totals:         0       0       0       0       0       0       0
   446 ;;Total ram usage:        0 bytes
   447 ;; Hardware stack levels used: 1
   448 ;; Hardware stack levels required when called: 4
   449 ;; This function calls:
   450 ;;		Nothing
   451 ;; This function is called by:
   452 ;;		_SYSTEM_Initialize
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           	psect	text4
   457   000718                     __ptext4:
   458                           	callstack 0
   459   000718                     _OSCILLATOR_Initialize:
   460                           	callstack 25
   461   000718                     
   462                           ;setting_hardaware/setting.c: 75:     IRCF2 = 1;
   463   000718  8CD3               	bsf	4051,6,c	;volatile
   464                           
   465                           ;setting_hardaware/setting.c: 76:     IRCF1 = 1;
   466   00071A  8AD3               	bsf	4051,5,c	;volatile
   467                           
   468                           ;setting_hardaware/setting.c: 77:     IRCF0 = 0;
   469   00071C  98D3               	bcf	4051,4,c	;volatile
   470   00071E  0012               	return		;funcret
   471   000720                     __end_of_OSCILLATOR_Initialize:
   472                           	callstack 0
   473                           
   474 ;; *************** function _INTERRUPT_Initialize *****************
   475 ;; Defined at:
   476 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		None
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   490 ;;      Params:         0       0       0       0       0       0       0
   491 ;;      Locals:         0       0       0       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0       0       0
   493 ;;      Totals:         0       0       0       0       0       0       0
   494 ;;Total ram usage:        0 bytes
   495 ;; Hardware stack levels used: 1
   496 ;; Hardware stack levels required when called: 4
   497 ;; This function calls:
   498 ;;		Nothing
   499 ;; This function is called by:
   500 ;;		_SYSTEM_Initialize
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text5
   505   000720                     __ptext5:
   506                           	callstack 0
   507   000720                     _INTERRUPT_Initialize:
   508                           	callstack 25
   509   000720                     
   510                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
   511   000720  8ED0               	bsf	208,7,c	;volatile
   512                           
   513                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
   514   000722  8EF2               	bsf	242,7,c	;volatile
   515                           
   516                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
   517   000724  8CF2               	bsf	242,6,c	;volatile
   518   000726  0012               	return		;funcret
   519   000728                     __end_of_INTERRUPT_Initialize:
   520                           	callstack 0
   521                           
   522 ;; *************** function _CCP1_Initialize *****************
   523 ;; Defined at:
   524 ;;		line 3 in file "setting_hardaware/ccp1.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, status,2
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   538 ;;      Params:         0       0       0       0       0       0       0
   539 ;;      Locals:         0       0       0       0       0       0       0
   540 ;;      Temps:          0       0       0       0       0       0       0
   541 ;;      Totals:         0       0       0       0       0       0       0
   542 ;;Total ram usage:        0 bytes
   543 ;; Hardware stack levels used: 1
   544 ;; Hardware stack levels required when called: 4
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		_SYSTEM_Initialize
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           	psect	text6
   553   00070C                     __ptext6:
   554                           	callstack 0
   555   00070C                     _CCP1_Initialize:
   556                           	callstack 25
   557   00070C                     
   558                           ;setting_hardaware/ccp1.c: 4:     TRISCbits.TRISC2=0;
   559   00070C  9494               	bcf	148,2,c	;volatile
   560   00070E                     
   561                           ;setting_hardaware/ccp1.c: 5:     CCP1CON=9;
   562   00070E  0E09               	movlw	9
   563   000710  6EBD               	movwf	189,c	;volatile
   564   000712                     
   565                           ;setting_hardaware/ccp1.c: 6:     PIR1bits.CCP1IF=0;
   566   000712  949E               	bcf	158,2,c	;volatile
   567   000714                     
   568                           ;setting_hardaware/ccp1.c: 7:     IPR1bits.CCP1IP = 1;
   569   000714  849F               	bsf	159,2,c	;volatile
   570   000716  0012               	return		;funcret
   571   000718                     __end_of_CCP1_Initialize:
   572                           	callstack 0
   573                           
   574 ;; *************** function _ADC_Initialize *****************
   575 ;; Defined at:
   576 ;;		line 3 in file "setting_hardaware/adc.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;		None
   579 ;; Auto vars:     Size  Location     Type
   580 ;;		None
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg, status,2
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   590 ;;      Params:         0       0       0       0       0       0       0
   591 ;;      Locals:         0       0       0       0       0       0       0
   592 ;;      Temps:          0       0       0       0       0       0       0
   593 ;;      Totals:         0       0       0       0       0       0       0
   594 ;;Total ram usage:        0 bytes
   595 ;; Hardware stack levels used: 1
   596 ;; Hardware stack levels required when called: 4
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_SYSTEM_Initialize
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text7
   605   0006E0                     __ptext7:
   606                           	callstack 0
   607   0006E0                     _ADC_Initialize:
   608                           	callstack 25
   609   0006E0                     
   610                           ;setting_hardaware/adc.c: 4:     TRISA = 0xff;
   611   0006E0  6892               	setf	146,c	;volatile
   612   0006E2                     
   613                           ;setting_hardaware/adc.c: 5:     ADCON1 = 0x0e;
   614   0006E2  0E0E               	movlw	14
   615   0006E4  6EC1               	movwf	193,c	;volatile
   616   0006E6                     
   617                           ;setting_hardaware/adc.c: 7:     ADFM = 1 ;
   618   0006E6  8EC0               	bsf	4032,7,c	;volatile
   619                           
   620                           ;setting_hardaware/adc.c: 8:     ADCON2bits.ADCS = 7;
   621   0006E8  0E07               	movlw	7
   622   0006EA  12C0               	iorwf	192,f,c	;volatile
   623                           
   624                           ;setting_hardaware/adc.c: 9:     ADRESH=0;
   625   0006EC  0E00               	movlw	0
   626   0006EE  6EC4               	movwf	196,c	;volatile
   627                           
   628                           ;setting_hardaware/adc.c: 10:     ADRESL=0;
   629   0006F0  0E00               	movlw	0
   630   0006F2  6EC3               	movwf	195,c	;volatile
   631   0006F4  0012               	return		;funcret
   632   0006F6                     __end_of_ADC_Initialize:
   633                           	callstack 0
   634                           
   635 ;; *************** function _GetString *****************
   636 ;; Defined at:
   637 ;;		line 71 in file "setting_hardaware/uart.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      PTR unsigned char 
   644 ;; Registers used:
   645 ;;		wreg
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   651 ;;      Params:         2       0       0       0       0       0       0
   652 ;;      Locals:         0       0       0       0       0       0       0
   653 ;;      Temps:          0       0       0       0       0       0       0
   654 ;;      Totals:         2       0       0       0       0       0       0
   655 ;;Total ram usage:        2 bytes
   656 ;; Hardware stack levels used: 1
   657 ;; Hardware stack levels required when called: 4
   658 ;; This function calls:
   659 ;;		Nothing
   660 ;; This function is called by:
   661 ;;		_main
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           	psect	text8
   666   00072E                     __ptext8:
   667                           	callstack 0
   668   00072E                     _GetString:
   669                           	callstack 26
   670   00072E                     
   671                           ;setting_hardaware/uart.c: 72:     return mystring;
   672   00072E  0E03               	movlw	_mystring& (0+255)
   673   000730  0012               	return		;funcret
   674   000732                     __end_of_GetString:
   675                           	callstack 0
   676                           
   677 ;; *************** function _Lo_ISR *****************
   678 ;; Defined at:
   679 ;;		line 77 in file "setting_hardaware/uart.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;		None
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   693 ;;      Params:         0       0       0       0       0       0       0
   694 ;;      Locals:         0       0       0       0       0       0       0
   695 ;;      Temps:          5       0       0       0       0       0       0
   696 ;;      Totals:         5       0       0       0       0       0       0
   697 ;;Total ram usage:        5 bytes
   698 ;; Hardware stack levels used: 1
   699 ;; Hardware stack levels required when called: 3
   700 ;; This function calls:
   701 ;;		_MyusartRead
   702 ;; This function is called by:
   703 ;;		Interrupt level 1
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           	psect	intcodelo
   708   000018                     __pintcodelo:
   709                           	callstack 0
   710   000018                     _Lo_ISR:
   711                           	callstack 25
   712                           
   713                           ;incstack = 0
   714   000018  8036               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   715   00001A  CFD8 F02C          	movff	status,??_Lo_ISR
   716   00001E  CFE8 F02D          	movff	wreg,??_Lo_ISR+1
   717   000022  CFE0 F02E          	movff	bsr,??_Lo_ISR+2
   718   000026  CFD9 F02F          	movff	fsr2l,??_Lo_ISR+3
   719   00002A  CFDA F030          	movff	fsr2h,??_Lo_ISR+4
   720   00002E                     
   721                           ;setting_hardaware/uart.c: 79:     if(RCIF)
   722   00002E  AA9E               	btfss	3998,5,c	;volatile
   723   000030  EF1C  F000         	goto	i1u7_21
   724   000034  EF1E  F000         	goto	i1u7_20
   725   000038                     i1u7_21:
   726   000038  EF2A  F000         	goto	i1l156
   727   00003C                     i1u7_20:
   728   00003C                     
   729                           ;setting_hardaware/uart.c: 80:     {;setting_hardaware/uart.c: 81:         if(RCSTAbits.
      +                          OERR)
   730   00003C  A2AB               	btfss	171,1,c	;volatile
   731   00003E  EF23  F000         	goto	i1u8_21
   732   000042  EF25  F000         	goto	i1u8_20
   733   000046                     i1u8_21:
   734   000046  EF28  F000         	goto	i1l962
   735   00004A                     i1u8_20:
   736   00004A                     
   737                           ;setting_hardaware/uart.c: 82:         {;setting_hardaware/uart.c: 83:             CREN 
      +                          = 0;
   738   00004A  98AB               	bcf	4011,4,c	;volatile
   739                           
   740                           ;setting_hardaware/uart.c: 84:             __nop();
   741   00004C  0000               	nop	
   742                           
   743                           ;setting_hardaware/uart.c: 85:             CREN = 1;
   744   00004E  88AB               	bsf	4011,4,c	;volatile
   745   000050                     i1l962:
   746                           
   747                           ;setting_hardaware/uart.c: 88:         MyusartRead();
   748   000050  EC01  F003         	call	_MyusartRead	;wreg free
   749   000054                     i1l156:
   750   000054  C030  FFDA         	movff	??_Lo_ISR+4,fsr2h
   751   000058  C02F  FFD9         	movff	??_Lo_ISR+3,fsr2l
   752   00005C  C02E  FFE0         	movff	??_Lo_ISR+2,bsr
   753   000060  C02D  FFE8         	movff	??_Lo_ISR+1,wreg
   754   000064  C02C  FFD8         	movff	??_Lo_ISR,status
   755   000068  9036               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   756   00006A  0010               	retfie	
   757   00006C                     __end_of_Lo_ISR:
   758                           	callstack 0
   759                           
   760 ;; *************** function _MyusartRead *****************
   761 ;; Defined at:
   762 ;;		line 59 in file "setting_hardaware/uart.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;		None
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      void 
   769 ;; Registers used:
   770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   776 ;;      Params:         0       0       0       0       0       0       0
   777 ;;      Locals:         0       0       0       0       0       0       0
   778 ;;      Temps:          0       0       0       0       0       0       0
   779 ;;      Totals:         0       0       0       0       0       0       0
   780 ;;Total ram usage:        0 bytes
   781 ;; Hardware stack levels used: 1
   782 ;; Hardware stack levels required when called: 2
   783 ;; This function calls:
   784 ;;		_UART_Write
   785 ;; This function is called by:
   786 ;;		_Lo_ISR
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           	psect	text10
   791   000602                     __ptext10:
   792                           	callstack 0
   793   000602                     _MyusartRead:
   794                           	callstack 25
   795   000602                     
   796                           ;setting_hardaware/uart.c: 62:     mystring[lenStr] = RCREG;
   797   000602  5001               	movf	_lenStr^0,w,c
   798   000604  0F03               	addlw	low _mystring
   799   000606  6ED9               	movwf	fsr2l,c
   800   000608  6ADA               	clrf	fsr2h,c
   801   00060A  CFAE FFDF          	movff	4014,indf2	;volatile
   802   00060E                     
   803                           ;setting_hardaware/uart.c: 63:     UART_Write(mystring[lenStr]);
   804   00060E  5001               	movf	_lenStr^0,w,c
   805   000610  0F03               	addlw	low _mystring
   806   000612  6ED9               	movwf	fsr2l,c
   807   000614  6ADA               	clrf	fsr2h,c
   808   000616  50DF               	movf	indf2,w,c
   809   000618  EC7B  F003         	call	_UART_Write
   810   00061C                     
   811                           ;setting_hardaware/uart.c: 64:     lenStr++;
   812   00061C  4A01               	infsnz	_lenStr^0,f,c
   813   00061E  2A02               	incf	(_lenStr+1)^0,f,c
   814   000620                     
   815                           ;setting_hardaware/uart.c: 65:     if(lenStr >= 20){
   816   000620  BE02               	btfsc	(_lenStr+1)^0,7,c
   817   000622  EF1C  F003         	goto	i1u3_21
   818   000626  5002               	movf	(_lenStr+1)^0,w,c
   819   000628  E109               	bnz	i1u3_20
   820   00062A  0E14               	movlw	20
   821   00062C  5C01               	subwf	_lenStr^0,w,c
   822   00062E  A0D8               	btfss	status,0,c
   823   000630  EF1C  F003         	goto	i1u3_21
   824   000634  EF1E  F003         	goto	i1u3_20
   825   000638                     i1u3_21:
   826   000638  EF22  F003         	goto	i1l146
   827   00063C                     i1u3_20:
   828   00063C                     
   829                           ;setting_hardaware/uart.c: 66:         lenStr = 0;
   830   00063C  0E00               	movlw	0
   831   00063E  6E02               	movwf	(_lenStr+1)^0,c
   832   000640  0E00               	movlw	0
   833   000642  6E01               	movwf	_lenStr^0,c
   834   000644                     i1l146:
   835   000644  0012               	return		;funcret
   836   000646                     __end_of_MyusartRead:
   837                           	callstack 0
   838                           
   839 ;; *************** function _UART_Write *****************
   840 ;; Defined at:
   841 ;;		line 41 in file "setting_hardaware/uart.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;  data            1    wreg     unsigned char 
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  data            1    0[COMRAM] unsigned char 
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   855 ;;      Params:         0       0       0       0       0       0       0
   856 ;;      Locals:         1       0       0       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0       0       0
   858 ;;      Totals:         1       0       0       0       0       0       0
   859 ;;Total ram usage:        1 bytes
   860 ;; Hardware stack levels used: 1
   861 ;; Hardware stack levels required when called: 1
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		_MyusartRead
   866 ;;		_UART_Write_Text
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text11
   871   0006F6                     __ptext11:
   872                           	callstack 0
   873   0006F6                     _UART_Write:
   874                           	callstack 25
   875                           
   876                           ;incstack = 0
   877                           ;UART_Write@data stored from wreg
   878   0006F6  6E2B               	movwf	UART_Write@data^0,c
   879   0006F8                     i1l128:
   880   0006F8  A2AC               	btfss	172,1,c	;volatile
   881   0006FA  EF81  F003         	goto	i1u1_21
   882   0006FE  EF83  F003         	goto	i1u1_20
   883   000702                     i1u1_21:
   884   000702  EF7C  F003         	goto	i1l128
   885   000706                     i1u1_20:
   886   000706                     
   887                           ;setting_hardaware/uart.c: 44:     TXREG = data;
   888   000706  C02B  FFAD         	movff	UART_Write@data,4013	;volatile
   889   00070A  0012               	return		;funcret
   890   00070C                     __end_of_UART_Write:
   891                           	callstack 0
   892                           
   893 ;; *************** function _Hi_ISR *****************
   894 ;; Defined at:
   895 ;;		line 33 in file "main.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		None
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   909 ;;      Params:         0       0       0       0       0       0       0
   910 ;;      Locals:         0       0       0       0       0       0       0
   911 ;;      Temps:          0       0       0       0       0       0       0
   912 ;;      Totals:         0       0       0       0       0       0       0
   913 ;;Total ram usage:        0 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		Interrupt level 2
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	intcode
   923   000008                     __pintcode:
   924                           	callstack 0
   925   000008                     _Hi_ISR:
   926                           	callstack 25
   927                           
   928                           ;incstack = 0
   929   000008  8236               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   930   00000A  ED94  F003         	call	int_func,f	;refresh shadow registers
   931                           
   932                           	psect	intcode_body
   933   000728                     __pintcode_body:
   934                           	callstack 25
   935   000728                     int_func:
   936                           	callstack 25
   937   000728  0006               	pop		; remove dummy address from shadow register refresh
   938   00072A  9236               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   939   00072C  0011               	retfie		f
   940   00072E                     __end_of_Hi_ISR:
   941                           	callstack 0
   942                           
   943                           	psect	smallconst
   944   000600                     __psmallconst:
   945                           	callstack 0
   946   000600  00                 	db	0
   947   000601  00                 	db	0	; dummy byte at the end
   948   000000                     
   949                           	psect	rparam
   950   000000                     
   951                           	psect	temp
   952   000036                     btemp:
   953                           	callstack 0
   954   000036                     	ds	1
   955   000000                     int$flags	set	btemp
   956   000000                     wtemp8	set	btemp+1
   957   000000                     ttemp5	set	btemp+1
   958   000000                     ttemp6	set	btemp+4
   959   000000                     ttemp7	set	btemp+8
   960                           
   961                           	psect	idloc
   962                           
   963                           ;Config register IDLOC0 @ 0x200000
   964                           ;	unspecified, using default values
   965   200000                     	org	2097152
   966   200000  FF                 	db	255
   967                           
   968                           ;Config register IDLOC1 @ 0x200001
   969                           ;	unspecified, using default values
   970   200001                     	org	2097153
   971   200001  FF                 	db	255
   972                           
   973                           ;Config register IDLOC2 @ 0x200002
   974                           ;	unspecified, using default values
   975   200002                     	org	2097154
   976   200002  FF                 	db	255
   977                           
   978                           ;Config register IDLOC3 @ 0x200003
   979                           ;	unspecified, using default values
   980   200003                     	org	2097155
   981   200003  FF                 	db	255
   982                           
   983                           ;Config register IDLOC4 @ 0x200004
   984                           ;	unspecified, using default values
   985   200004                     	org	2097156
   986   200004  FF                 	db	255
   987                           
   988                           ;Config register IDLOC5 @ 0x200005
   989                           ;	unspecified, using default values
   990   200005                     	org	2097157
   991   200005  FF                 	db	255
   992                           
   993                           ;Config register IDLOC6 @ 0x200006
   994                           ;	unspecified, using default values
   995   200006                     	org	2097158
   996   200006  FF                 	db	255
   997                           
   998                           ;Config register IDLOC7 @ 0x200007
   999                           ;	unspecified, using default values
  1000   200007                     	org	2097159
  1001   200007  FF                 	db	255
  1002                           
  1003                           	psect	config
  1004                           
  1005                           ; Padding undefined space
  1006   300000                     	org	3145728
  1007   300000  FF                 	db	255
  1008                           
  1009                           ;Config register CONFIG1H @ 0x300001
  1010                           ;	Oscillator Selection bits
  1011                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1012                           ;	Fail-Safe Clock Monitor Enable bit
  1013                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1014                           ;	Internal/External Oscillator Switchover bit
  1015                           ;	IESO = ON, Oscillator Switchover mode enabled
  1016   300001                     	org	3145729
  1017   300001  88                 	db	136
  1018                           
  1019                           ;Config register CONFIG2L @ 0x300002
  1020                           ;	Power-up Timer Enable bit
  1021                           ;	PWRT = OFF, PWRT disabled
  1022                           ;	Brown-out Reset Enable bits
  1023                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1024                           ;	Brown Out Reset Voltage bits
  1025                           ;	BORV = 3, Minimum setting
  1026   300002                     	org	3145730
  1027   300002  1F                 	db	31
  1028                           
  1029                           ;Config register CONFIG2H @ 0x300003
  1030                           ;	Watchdog Timer Enable bit
  1031                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1032                           ;	Watchdog Timer Postscale Select bits
  1033                           ;	WDTPS = 1, 1:1
  1034   300003                     	org	3145731
  1035   300003  00                 	db	0
  1036                           
  1037                           ; Padding undefined space
  1038   300004                     	org	3145732
  1039   300004  FF                 	db	255
  1040                           
  1041                           ;Config register CONFIG3H @ 0x300005
  1042                           ;	CCP2 MUX bit
  1043                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1044                           ;	PORTB A/D Enable bit
  1045                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1046                           ;	Low-Power Timer1 Oscillator Enable bit
  1047                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1048                           ;	MCLR Pin Enable bit
  1049                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1050   300005                     	org	3145733
  1051   300005  83                 	db	131
  1052                           
  1053                           ;Config register CONFIG4L @ 0x300006
  1054                           ;	Stack Full/Underflow Reset Enable bit
  1055                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1056                           ;	Single-Supply ICSP Enable bit
  1057                           ;	LVP = OFF, Single-Supply ICSP disabled
  1058                           ;	Extended Instruction Set Enable bit
  1059                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1060                           ;	Background Debugger Enable bit
  1061                           ;	DEBUG = 0x1, unprogrammed default
  1062   300006                     	org	3145734
  1063   300006  81                 	db	129
  1064                           
  1065                           ; Padding undefined space
  1066   300007                     	org	3145735
  1067   300007  FF                 	db	255
  1068                           
  1069                           ;Config register CONFIG5L @ 0x300008
  1070                           ;	Code Protection bit
  1071                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1072                           ;	Code Protection bit
  1073                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1074                           ;	Code Protection bit
  1075                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1076                           ;	Code Protection bit
  1077                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1078   300008                     	org	3145736
  1079   300008  0F                 	db	15
  1080                           
  1081                           ;Config register CONFIG5H @ 0x300009
  1082                           ;	Boot Block Code Protection bit
  1083                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1084                           ;	Data EEPROM Code Protection bit
  1085                           ;	CPD = OFF, Data EEPROM not code-protected
  1086   300009                     	org	3145737
  1087   300009  C0                 	db	192
  1088                           
  1089                           ;Config register CONFIG6L @ 0x30000A
  1090                           ;	Write Protection bit
  1091                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1092                           ;	Write Protection bit
  1093                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1094                           ;	Write Protection bit
  1095                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1096                           ;	Write Protection bit
  1097                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1098   30000A                     	org	3145738
  1099   30000A  0F                 	db	15
  1100                           
  1101                           ;Config register CONFIG6H @ 0x30000B
  1102                           ;	Configuration Register Write Protection bit
  1103                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1104                           ;	Boot Block Write Protection bit
  1105                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1106                           ;	Data EEPROM Write Protection bit
  1107                           ;	WRTD = OFF, Data EEPROM not write-protected
  1108   30000B                     	org	3145739
  1109   30000B  E0                 	db	224
  1110                           
  1111                           ;Config register CONFIG7L @ 0x30000C
  1112                           ;	Table Read Protection bit
  1113                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1114                           ;	Table Read Protection bit
  1115                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1116                           ;	Table Read Protection bit
  1117                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1118                           ;	Table Read Protection bit
  1119                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1120   30000C                     	org	3145740
  1121   30000C  0F                 	db	15
  1122                           
  1123                           ;Config register CONFIG7H @ 0x30000D
  1124                           ;	Boot Block Table Read Protection bit
  1125                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1126   30000D                     	org	3145741
  1127   30000D  40                 	db	64
  1128                           tosu	equ	0xFFF
  1129                           tosh	equ	0xFFE
  1130                           tosl	equ	0xFFD
  1131                           stkptr	equ	0xFFC
  1132                           pclatu	equ	0xFFB
  1133                           pclath	equ	0xFFA
  1134                           pcl	equ	0xFF9
  1135                           tblptru	equ	0xFF8
  1136                           tblptrh	equ	0xFF7
  1137                           tblptrl	equ	0xFF6
  1138                           tablat	equ	0xFF5
  1139                           prodh	equ	0xFF4
  1140                           prodl	equ	0xFF3
  1141                           indf0	equ	0xFEF
  1142                           postinc0	equ	0xFEE
  1143                           postdec0	equ	0xFED
  1144                           preinc0	equ	0xFEC
  1145                           plusw0	equ	0xFEB
  1146                           fsr0h	equ	0xFEA
  1147                           fsr0l	equ	0xFE9
  1148                           wreg	equ	0xFE8
  1149                           indf1	equ	0xFE7
  1150                           postinc1	equ	0xFE6
  1151                           postdec1	equ	0xFE5
  1152                           preinc1	equ	0xFE4
  1153                           plusw1	equ	0xFE3
  1154                           fsr1h	equ	0xFE2
  1155                           fsr1l	equ	0xFE1
  1156                           bsr	equ	0xFE0
  1157                           indf2	equ	0xFDF
  1158                           postinc2	equ	0xFDE
  1159                           postdec2	equ	0xFDD
  1160                           preinc2	equ	0xFDC
  1161                           plusw2	equ	0xFDB
  1162                           fsr2h	equ	0xFDA
  1163                           fsr2l	equ	0xFD9
  1164                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     11      53
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    sp__GetString	PTR unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_strcpy
    _strcpy->_GetString

Critical Paths under _Lo_ISR in COMRAM

    _MyusartRead->_UART_Write

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     225
                          _GetString
                  _SYSTEM_Initialize
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               3     1      2     225
                                              8 COMRAM     3     1      2
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetString                                            2     0      2       0
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                               5     5      0      15
                                              1 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          0     0      0      15
                         _UART_Write
 ---------------------------------------------------------------------------------
 (5) _UART_Write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Hi_ISR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetString
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _strcpy
     _GetString (ARG)

 _Lo_ISR (ROOT)
   _MyusartRead
     _UART_Write

 _Hi_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      B      35       1       42.1%
BITBIGSFRl          12      0       0      28        0.0%
BITBIGSFR_1llhl      B      0       0      25        0.0%
BITBIGSFR_1hhl       B      0       0      21        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFR_1llhh      8      0       0      24        0.0%
BITBIGSFRhh          7      0       0      26        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFR_1llhh      4      0       0      23        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_1hhh       2      0       0      20        0.0%
BITBIGSFR_1lh        2      0       0      22        0.0%
BITBIGSFR_5l         2      0       0      16        0.0%
BITBIGSFRhl          1      0       0      27        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35      29        0.0%
DATA                 0      0      35      31        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Dec 17 15:02:18 2023

                           l44 06F4                             l61 0716                             l90 071E  
                           l68 0726                             l87 06DE                             u90 066E  
                           u91 066A                             bsr 0FE0        __end_of_CCP1_Initialize 0718  
                          l125 0698                            l149 0730                            l840 06E2  
                          l842 06E6                            l850 0714                            l844 070C  
                          l852 0720                            l860 067C                            l836 066E  
                          l838 06E0                            l846 070E                            l854 0718  
                          l870 068A                            l862 067E                            l848 0712  
                          l880 0694                            l872 068C                            l864 0680  
                          l856 0670                            l882 0696                            l874 068E  
                          l866 0686                            l858 0674                            l890 06D2  
                          l970 0646                            l876 0690                            l868 0688  
                          l892 06D6                            l972 064A                            l966 072E  
                          l878 0692                            l894 06DA                            l974 069A  
                          l888 06CA                            l976 069E                            _str 0017  
                          wreg 0FE8                           _ADFM 7E07                           _CREN 7D5C  
                         _RCIF 7CF5                           i2l27 072A                           _main 069A  
                         fsr1h 0FE2                           fsr2h 0FDA                           indf1 0FE7  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 0036                           start 006C                   ___param_bank 0000  
             ?_UART_Initialize 002B  __end_of_OSCILLATOR_Initialize 0720                          ?_main 002B  
                        _IRCF0 7E9C                          _IRCF1 7E9D                          _IRCF2 7E9E  
                        i1l131 070A                          i1l128 06F8                          i1l146 0644  
                        i1l156 0054                          i1l910 0620                          i1l912 063C  
                        i1l904 0602                          i1l906 060E                          i1l908 061C  
                        i1l960 004A                          i1l962 0050                          i1l884 06F8  
                        i1l956 002E                          i1l886 0706                          i1l958 003C  
                        _RCREG 0FAE                          _SPBRG 0FAF                          _TRISA 0F92  
                        _TXREG 0FAD                    ?_UART_Write 002B                          ttemp5 0037  
                        ttemp6 003A                          ttemp7 003E                          status 0FD8  
                        wtemp8 0037                __initialization 06B4                   __end_of_main 06B4  
                       ??_main 0036               ?_CCP1_Initialize 002B                  __activetblptr 0000  
                       _ADCON1 0FC1                         _ADRESH 0FC4                         _ADRESL 0FC3  
                       i1u1_20 0706                         i1u1_21 0702                         i1u3_20 063C  
                       i1u3_21 0638                         i1u7_20 003C                         i1u7_21 0038  
                       i1u8_20 004A                         i1u8_21 0046                         _Hi_ISR 0008  
                       _Lo_ISR 0018                         _lenStr 0001                         clear_0 06BA  
                       isa$std 0001                         _strcpy 0646                   __mediumconst 0000  
            _SYSTEM_Initialize 06CA                     __accesstop 0080        __end_of__initialization 06C0  
           ?_SYSTEM_Initialize 002B                  ___rparam_used 0001              __end_of_GetString 0732  
               __pcstackCOMRAM 002B            ??_SYSTEM_Initialize 0031                  ??_MyusartRead 002C  
    __end_of_SYSTEM_Initialize 06E0                        ?_Hi_ISR 002B                        ?_Lo_ISR 002B  
                      _CCP1CON 0FBD                        ?_strcpy 0033                   ??_UART_Write 002B  
          __end_of_MyusartRead 0646                        __Hparam 0000                        __Lparam 0000  
           __end_of_UART_Write 070C                   __psmallconst 0600                        __pcinit 06B4  
                      __ramtop 0600                        __ptext0 069A                        __ptext1 0646  
                      __ptext2 06CA                        __ptext3 0670                        __ptext4 0718  
                      __ptext5 0720                        __ptext6 070C                        __ptext7 06E0  
                      __ptext8 072E          _OSCILLATOR_Initialize 0718                 __pintcode_body 0728  
         end_of_initialization 06C0                        int_func 0728                      _RCSTAbits 0FAB  
                      postinc0 0FEE                        strcpy@d 0035                 UART_Write@data 002B  
                    _TRISCbits 0F94                    _MyusartRead 0602                      _TXSTAbits 0FAC  
               __end_of_Hi_ISR 072E                 __end_of_Lo_ISR 006C   __end_of_INTERRUPT_Initialize 0728  
                    _GetString 072E                    _BAUDCONbits 0FB8                 _ADC_Initialize 06E0  
       ?_OSCILLATOR_Initialize 002B                 __end_of_strcpy 0670            start_initialization 06B4  
            ??_UART_Initialize 0031                       ??_Hi_ISR 002B                       ??_Lo_ISR 002C  
       __end_of_ADC_Initialize 06F6                     ?_GetString 0031                       ??_strcpy 0035  
                  __pbssCOMRAM 0001              ??_CCP1_Initialize 0031                      __pintcode 0008  
              ?_ADC_Initialize 002B                    __pintcodelo 0018                    __smallconst 0600  
         _INTERRUPT_Initialize 0720                       _IPR1bits 0F9F                       _PIE1bits 0F9D  
                     _PIR1bits 0F9E                       _RCONbits 0FD0                    ??_GetString 0033  
                   _ADCON0bits 0FC2                     _ADCON2bits 0FC0                   ?_MyusartRead 002B  
        ?_INTERRUPT_Initialize 002B                       __Hrparam 0000                       __Lrparam 0000  
      ??_OSCILLATOR_Initialize 0031                _UART_Initialize 0670                       __ptext10 0602  
                     __ptext11 06F6                     strcpy@dest 0033                       isa$xinst 0000  
                     int$flags 0036                       _mystring 0003                     _INTCONbits 0FF2  
              _CCP1_Initialize 070C         ??_INTERRUPT_Initialize 0031                       intlevel1 0000  
                     intlevel2 0000                      strcpy@src 0034               ??_ADC_Initialize 0031  
                   _OSCCONbits 0FD3        __end_of_UART_Initialize 069A                     _UART_Write 06F6  
